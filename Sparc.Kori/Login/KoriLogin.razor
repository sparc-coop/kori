@rendermode @(new InteractiveServerRenderMode(prerender: false))
@using System.Net.Http.Json
@using Sparc.Blossom.Authentication
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using System.Text.RegularExpressions
@using Sparc.Kori.Languages

<style class="kori-ignore">
    @@import url(https://fonts.googleapis.com/css2?family=Encode+Sans+Semi+Expanded:wght@100;200;300;400;500;600;700;800;900&display=swap);
    @@import url(https://fonts.googleapis.com/css2?family=Encode+Sans+Expanded:wght@100;200;300;400;500;600;700;800;900&display=swap);
</style>

<div id="kori-login" class="kori-login kori-ignore" @onclick:stopPropagation="true">
    <AuthorizeView>
        <Authorized>
            <button class="kori-login__toggle toggle-desktop @(ShowMenu ? "" : "show") @(context.User.IsAnonymous() ? "loggedout" : "loggedin")" aria-label="Login" @onclick=ToggleLoginMenu>
                <UserIcon LoggedIn="!context.User.IsAnonymous()" />
            </button>
            <button class="kori-login__toggle toggle-mobile @(ShowMenu ? "" : "show") @(context.User.IsAnonymous() ? "loggedout" : "loggedin")" aria-label="Login" @onclick=ToggleMobileMenu>
                <UserIcon LoggedIn="!context.User.IsAnonymous()" />
            </button>
            <button class="kori-login__close @(ShowMenu ? "show" : "")" @onclick=ToggleMobileMenu aria-label="Close">
                <img src="_content/Sparc.Kori/icons/Close X.svg" />
            </button>

            <div class="kori-login__menu @(ShowMenu ? "show" : "")" @onclick:stopPropagation="true">
                @switch (Auth.LoginState)
                {
                    case LoginStates.NotInitialized:
                    case LoginStates.LoggedOut:
                        <header>
                            <h3 class="kori-login__text-primary">Welcome!</h3>
                            <p class="kori-login__text-secondary">Lorem ipsum dolor sit amet, consectetur</p>
                        </header>
                        <div class="kori-login__menu-actions">
                            <div class="kori-desktop">
                                <button class="kori-login__login-btn kori-login__btn kori-login__text-btn" @onclick=LoginWithPasskey>
                                    <img src="_content/Sparc.Kori/icons/Passkey.svg" />
                                    <div class="kori-login__login-btn-wrapper">
                                        <figcaption class="kori-login__text-primary">Passkey Login</figcaption>
                                        <aside class="kori-login__text-secondary">Set up your passkey</aside>
                                    </div>
                                </button>
                                <div class="kori-login__menu-divider"></div>
                                <div class="kori-login__language">
                                    <LanguageSelector @key="Language?.Id" SelectedLanguage="Language" LanguageChanged="UpdateLanguage" />
                                </div>
                            </div>
                            <div class="kori-mobile">
                                <div id="kori-login__tabs" class="tabs">
                                    <div class="kori-login__tab @(ShowLoginTab ? "active" : "")" @onclick="ShowLoginMobile">Login</div>
                                    <div class="kori-login__tab @(ShowLanguageTab ? "active" : "")" @onclick="ShowLanguageMobile">Language</div>
                                </div>
                                <div class="kori-login__menu-mobile @(ShowLoginTab ? "show" : "")">
                                    <button class="kori-login__login-btn kori-login__btn kori-login__text-btn" @onclick=LoginWithPasskey>
                                        <img src="_content/Sparc.Kori/icons/Passkey.svg" />
                                        <div class="kori-login__login-btn-wrapper">
                                            <figcaption class="kori-login__text-primary">Passkey Login</figcaption>
                                            <aside class="kori-login__text-secondary">Set up your passkey</aside>
                                        </div>
                                    </button>
                                </div>
                                <div class="kori-login__language @(ShowLanguageTab ? "show" : "")">
                                    <LanguageSelector @key="Language?.Id" SelectedLanguage="Language" LanguageChanged="UpdateLanguage" />
                                </div>
                            </div>
                        </div>
                        break;
                    case LoginStates.ReadyForLogin:
                        <header>
                            <h3 class="kori-login__text-primary">Welcome!</h3>
                            <p class="kori-login__text-secondary">Lorem ipsum dolor sit amet, consectetur</p>
                        </header>
                        <div class="kori-login__menu-actions">
                            <div class="kori-desktop">
                                <form class="kori-login__form" @onsubmit=LoginWithEmail>
                                    <input id="kori-login__input-email" class="kori-login__input" @ref=LoginInput type="email" @bind="Email" name="username" placeholder="Enter your email" autocomplete="username webauthn" @onclick:stopPropagation="true" />
                                    <button type="submit" class="kori-login__submit-btn">
                                        Login
                                    </button>
                                    <div class="kori-login__form-error @(ShowFormError ? "show" : "")">
                                        <span class="kori-login__form-error-message">Email cannot be blank</span>
                                    </div>
                                </form>
                                <div class="kori-login__use-passkey">
                                    <button class="kori-login__passkey-btn kori-login__btn kori-login__text-btn" @onclick="LoginWithPasskey">
                                        <img src="_content/Sparc.Kori/icons/Passkey.svg" /> Use passkey
                                    </button>
                                </div>
                                <div class="kori-login__menu-divider"></div>
                                <div class="kori-login__language @(ShowLanguageTab ? "show" : "")">
                                    <LanguageSelector @key="Language?.Id" SelectedLanguage="Language" LanguageChanged="UpdateLanguage" />
                                </div>
                            </div>
                            <div class="kori-mobile">
                                <div id="kori-login__tabs" class="tabs">
                                    <div class="kori-login__tab @(ShowLoginTab ? "active" : "")" @onclick="ShowLoginMobile">Login</div>
                                    <div class="kori-login__tab @(ShowLanguageTab ? "active" : "")" @onclick="ShowLanguageMobile">Language</div>
                                </div>
                                <div class="kori-login__menu-mobile @(ShowLoginTab ? "show" : "")">
                                    <form class="kori-login__form" @onsubmit=LoginWithEmail>
                                        <input id="kori-login__input-email" class="kori-login__input" @ref=LoginInput type="email" @bind="Email" name="username" placeholder="Enter your email" autocomplete="username webauthn" @onclick:stopPropagation="true" />
                                        <button type="submit" class="kori-login__submit-btn">
                                            Login
                                        </button>
                                        <div class="kori-login__form-error @(ShowFormError ? "show" : "")">
                                            <span class="kori-login__form-error-message">Email cannot be blank</span>
                                        </div>
                                    </form>
                                    <div class="kori-login__use-passkey">
                                        <button class="kori-login__passkey-btn kori-login__btn kori-login__text-btn" @onclick="LoginWithPasskey">
                                            <img src="_content/Sparc.Kori/icons/Passkey.svg" /> Use passkey
                                        </button>
                                    </div>
                                </div>
                                <div class="kori-login__language @(ShowLanguageTab ? "show" : "")">
                                    <LanguageSelector @key="Language?.Id" SelectedLanguage="Language" LanguageChanged="UpdateLanguage" />
                                </div>
                            </div>
                        </div>
                        break;
                    case LoginStates.VerifyingToken:
                    case LoginStates.VerifyingEmail:
                        <div class="kori-login__menu-header-wrapper">
                            <header>
                                <h3 class="kori-login__text-primary">Welcome!</h3>
                                <p class="kori-login__text-secondary">Lorem ipsum dolor sit amet, consectetur</p>
                            </header>
                        </div>
                        <div class="kori-login__menu-actions">
                            <div class="kori-desktop">
                                <form class="kori-login__form" @onsubmit=LoginWithEmail>
                                    <input id="kori-login__input-email" class="kori-login__input" @ref=LoginInput type="email" @bind="Email" name="username" placeholder="Enter your email" autocomplete="username webauthn" @onclick:stopPropagation="true" disabled />
                                    <button type="submit" id="submit-btn" class="kori-login__submit-btn" disabled>
                                        Login
                                    </button>
                                    <div class="kori-login__form-error @(ShowFormError ? "show" : "")">
                                        <span class="kori-login__form-error-message">Email cannot be blank</span>
                                    </div>
                                </form>
                                <div class="kori-login__message-wrapper">
                                    <span class="kori-login__message kori-login__text-secondary">Signing you in...</span>
                                </div>
                                <div class="kori-login__menu-divider"></div>
                                <div class="kori-login__language @(ShowLanguageTab ? "show" : "")">
                                    <LanguageSelector @key="Language?.Id" SelectedLanguage="Language" LanguageChanged="UpdateLanguage" />
                                </div>
                            </div>
                            <div class="kori-mobile">
                                <div id="kori-login__tabs" class="tabs">
                                    <div class="kori-login__tab @(ShowLoginTab ? "active" : "")" @onclick="ShowLoginMobile">Login</div>
                                    <div class="kori-login__tab @(ShowLanguageTab ? "active" : "")" @onclick="ShowLanguageMobile">Language</div>
                                </div>
                                <div class="kori-login__menu-mobile @(ShowLoginTab ? "show" : "")">
                                    <form class="kori-login__form" @onsubmit=LoginWithEmail>
                                        <input id="kori-login__input-email" class="kori-login__input" @ref=LoginInput type="email" @bind="Email" name="username" placeholder="Enter your email" autocomplete="username webauthn" @onclick:stopPropagation="true" disabled />
                                        <button type="submit" id="submit-btn" class="kori-login__submit-btn" disabled>
                                            Login
                                        </button>
                                        <div class="kori-login__form-error @(ShowFormError ? "show" : "")">
                                            <span class="kori-login__form-error-message">Email cannot be blank</span>
                                        </div>
                                    </form>
                                    <div class="kori-login__message-wrapper">
                                        <span class="kori-login__message kori-login__text-secondary">Signing you in...</span>
                                    </div>
                                </div>
                                <div class="kori-login__language @(ShowLanguageTab ? "show" : "")">
                                    <LanguageSelector @key="Language?.Id" SelectedLanguage="Language" LanguageChanged="UpdateLanguage" />
                                </div>
                            </div>
                        </div>
                        break;
                    case LoginStates.AwaitingMagicLink:
                        <div class="kori-login__menu-header-wrapper">
                            <header>
                                <h3 class="kori-login__text-primary">Welcome!</h3>
                                <p class="kori-login__text-secondary">Lorem ipsum dolor sit amet, consectetur</p>
                            </header>
                        </div>
                        <div class="kori-login__menu-actions">
                            <div class="kori-desktop">
                                <form class="kori-login__form" @onsubmit=LoginWithEmail>
                                    <input id="kori-login__input-email" class="kori-login__input" @ref=LoginInput type="email" @bind="Email" name="username" placeholder="Enter your email" autocomplete="username webauthn" @onclick:stopPropagation="true" disabled />
                                    @* <button type="submit" id="submit-btn" class="kori-login__submit-btn" disabled>
                                        Login
                                    </button> *@
                                    <div class="kori-login__form-error @(ShowFormError ? "show" : "")">
                                        <span class="kori-login__form-error-message">Email cannot be blank</span>
                                    </div>
                                </form>
                                <div class="kori-login__message-wrapper">
                                    <span class="kori-login__message awaiting-link kori-login__text-secondary">Magic link sent!</span>
                                    <div class="kori-login__different-email">
                                        <button class="kori-login__text-secondary resend-link">Resend</button>
                                        <button class="kori-login__btn kori-login__text-btn different-email" @onclick=ClearInput><img src="_content/Sparc.Kori/icons/Logout.svg" /> Try a different email</button>
                                    </div>
                                </div>
                                <div class="kori-login__use-passkey">
                                    <button class="kori-login__passkey-btn kori-login__btn kori-login__text-btn" @onclick="LoginWithPasskey">
                                        <img src="_content/Sparc.Kori/icons/Passkey.svg" /> Use passkey
                                    </button>
                                </div>
                                <div class="kori-login__menu-divider"></div>
                                <div class="kori-login__language @(ShowLanguageTab ? "show" : "")">
                                    <LanguageSelector @key="Language?.Id" SelectedLanguage="Language" LanguageChanged="UpdateLanguage" />
                                </div>
                            </div>
                            <div class="kori-mobile">
                                <div id="kori-login__tabs" class="tabs">
                                    <div class="kori-login__tab @(ShowLoginTab ? "active" : "")" @onclick="ShowLoginMobile">Login</div>
                                    <div class="kori-login__tab @(ShowLanguageTab ? "active" : "")" @onclick="ShowLanguageMobile">Language</div>
                                </div>
                                <div class="kori-login__menu-mobile @(ShowLoginTab ? "show" : "")">
                                    <form class="kori-login__form" @onsubmit=LoginWithEmail>
                                        <input id="kori-login__input-email" class="kori-login__input" @ref=LoginInput type="email" @bind="Email" name="username" placeholder="Enter your email" autocomplete="username webauthn" @onclick:stopPropagation="true" disabled />
                                        @* <button type="submit" id="submit-btn" class="kori-login__submit-btn" disabled>
                                            Login
                                        </button> *@
                                        <div class="kori-login__form-error @(ShowFormError ? "show" : "")">
                                            <span class="kori-login__form-error-message">Email cannot be blank</span>
                                        </div>
                                    </form>
                                    <div class="kori-login__message-wrapper">
                                        <span class="kori-login__message awaiting-link kori-login__text-secondary">Magic link sent!</span>
                                        <div class="kori-login__different-email">
                                            <button class="kori-login__text-secondary resend-link">Resend</button>
                                            <button class="kori-login__btn kori-login__text-btn different-email" @onclick=ClearInput><img src="_content/Sparc.Kori/icons/Logout.svg" /> Try different email</button>
                                        </div>
                                    </div>
                                    <div class="kori-login__use-passkey">
                                        <button class="kori-login__passkey-btn kori-login__btn kori-login__text-btn" @onclick="LoginWithPasskey">
                                            <img src="_content/Sparc.Kori/icons/Passkey.svg" /> Use passkey
                                        </button>
                                    </div>
                                </div>
                                <div class="kori-login__language @(ShowLanguageTab ? "show" : "")">
                                    <LanguageSelector @key="Language?.Id" SelectedLanguage="Language" LanguageChanged="UpdateLanguage" />
                                </div>
                            </div>
                        </div>
                        break;
                    case LoginStates.LoggedIn:
                        <button class="kori-login__account-btn kori-login__btn" @onclick=ToggleAccountSettings>
                            <img src="_content/Sparc.Kori/icons/User Profile.svg" />
                            <div class="kori-login__login-btn-content">
                                <figcaption class="kori-login__text-primary">@Auth.User?.Username</figcaption>
                                <aside class="kori-login__text-secondary">Set up your passkey</aside>
                            </div>
                        </button>
                        <div class="kori-login__menu-actions">
                            <div class="kori-desktop">
                                <button class="kori-login__profile-btn kori-login__btn kori-login__text-btn">
                                    <img src="_content/Sparc.Kori/icons/User Profile Circle.svg" /> Profile
                                </button>
                                <button class="kori-login__setup-btn kori-login__btn kori-login__text-btn">
                                    <img src="_content/Sparc.Kori/icons/Shield.svg" /> Setup Backup Email
                                </button>
                                <button class="kori-login__logout-btn kori-login__btn kori-login__text-btn" @onclick=LogoutAsync>
                                    <img src="_content/Sparc.Kori/icons/Logout.svg" /> Logout
                                </button>
                                <div class="kori-login__menu-divider"></div>
                                <div class="kori-login__language @(ShowLanguageTab ? "show" : "")">
                                    <LanguageSelector @key="Language?.Id" SelectedLanguage="Language" LanguageChanged="UpdateLanguage" />
                                </div>
                            </div>
                            <div class="kori-mobile">
                                <div id="kori-login__tabs" class="tabs">
                                    <div class="kori-login__tab @(ShowLoginTab ? "active" : "")" @onclick="ShowLoginMobile" @onclick:stopPropagation="true">Login</div>
                                    <div class="kori-login__tab @(ShowLanguageTab ? "active" : "")" @onclick="ShowLanguageMobile" @onclick:stopPropagation="true">Language</div>
                                </div>
                                <button class="kori-login__profile-btn kori-login__btn kori-login__text-btn">
                                    <img src="_content/Sparc.Kori/icons/User Profile Circle.svg" /> Profile
                                </button>
                                <button class="kori-login__setup-btn kori-login__btn kori-login__text-btn">
                                    <img src="_content/Sparc.Kori/icons/Shield.svg" /> Setup Backup Email
                                </button>
                                <button class="kori-login__logout-btn kori-login__btn kori-login__text-btn" @onclick=LogoutAsync>
                                    <img src="_content/Sparc.Kori/icons/Logout.svg" /> Logout
                                </button>
                                <div class="kori-login__menu-divider"></div>
                                <div class="kori-login__language @(ShowLanguageTab ? "show" : "")">
                                    <LanguageSelector @key="Language?.Id" SelectedLanguage="Language" LanguageChanged="UpdateLanguage" />
                                </div>
                            </div>
                        </div>

                        break;
                    case LoginStates.Error:
                        <div class="kori-login__menu-header">
                            <div class="kori-login__menu-header kori-login__text-primary">Welcome!</div>
                            <p class="kori-login__menu-subheader kori-login__text-secondary">Lorem ipsum dolor sit amet, consectetur</p>
                        </div>
                        <div class="kori-login__menu-actions">
                            <button class="kori-login__login-btn" @onclick=LoginWithPasskey>
                                <img src="_content/Sparc.Kori/icons/Passkey.svg" />
                                <div class="login-btn__content">
                                    <figcaption class="kori-login__text-primary">Passkey Login</figcaption>
                                    <aside class="kori-login__text-secondary">Set up your passkey</aside>
                                </div>
                            </button>
                            <div class="kori-login__message-wrapper">
                                <span class="kori-login__message kori-login__text-secondary">@Auth.Message</span>
                            </div>
                            <div class="kori-login__menu-divider"></div>
                            <div class="kori-login__language @(ShowLanguageTab ? "show" : "")">
                                <LanguageSelector @key="Language?.Id" SelectedLanguage="Language" LanguageChanged="UpdateLanguage" />
                            </div>
                        </div>
                        break;
                }
            </div>
        </Authorized>
    </AuthorizeView>
</div>
<div id="kori-login__overlay" class="kori-login__overlay @(ShowMenu ? "show" : "")" @onclick=ToggleLoginMenu></div>

@* <script>
    var input = document.getElementById('kori-login__input-email');
    input.addEventListener('keypress', function(event) {
        if (event.keyCode == 13) {
            event.preventDefault();
            document.getElementById('submit-btn').click();
        }
    });
</script> *@

<script>
    function disablePageScrolling(scroll) {
    if (scroll == true) {
    document.body.classList.add("kori-login__mobile-open");
    console.log("disablePageScrolling");
    } else {
    document.body.classList.remove("kori-login__mobile-open");
    console.log("enablePageScrolling");
    }

    // var body = document.querySelectorAll(".kori-login__mobile-open")[0];
    // if (body) {
    //     body.style.overflowY = "hidden";
    //     body.style.position = "fixed";
    // }
    }
</script>

<style>
    body.kori-login__mobile-open {
    overflow: hidden;
    position: fixed;
    width: 100vw;
    }
</style>

@inject IJSRuntime Js
@inject IBlossomAuthenticator Auth
@inject KoriLanguageEngine KoriLanguageEngine

@code {
    [CascadingParameter] public ClaimsPrincipal User { get; set; }
    [Parameter][SupplyParameterFromQuery] public string? Token { get; set; }

    public string? Email;
    ElementReference? LoginInput;
    // string? SelectedLanguageId;
    KoriLanguage? Language;

    bool ShowMenu = false;
    bool ShowLanguageSettings = false;
    bool ShowOverlay = false;
    bool UsePasskey = false;
    bool ShowFormError = false;
    bool ShowLoginTab = true;
    bool ShowLanguageTab = false;

    protected override async Task OnInitializedAsync()
    {
        await KoriLanguageEngine.InitializeAsync(null);
        Language = KoriLanguageEngine.Current;

        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // await Js.InvokeVoidAsync("initHyperScript");
        // if (!String.IsNullOrEmpty(Token))
        // {
        //     await foreach (var state in Auth.Login(User, Token))
        //         StateHasChanged();
        // }
        if (firstRender)
        {
            await foreach (var state in Auth.Login(User, Token))
                StateHasChanged();
        }

    }

    async Task LoginWithPasskey()
    {
        UsePasskey = true;
        Console.WriteLine("logging in with passkey");
        await BeginLogin();
    }

    async Task LoginWithEmail()
    {
        UsePasskey = false;
        Console.WriteLine("logging in with email");
        if (Email == "")
        {
            ShowFormError = true;
        }
        else
        {
            ShowFormError = false;
            await BeginLogin();
        }
    }

    async Task BeginLogin()
    {
        // Attempt autofill signin
        // if (Email == null)
        // {
        //     Console.WriteLine("using passkey");
        //     await foreach (var state in Auth.LoginAsync(User))
        //         StateHasChanged();
        //     Auth.LoginState = LoginStates.ReadyForLogin;
        //         StateHasChanged();
        // }

        if (UsePasskey == true)
        {
            Email = "";
            await foreach (var state in Auth.Login(User))
                StateHasChanged();
            Auth.LoginState = LoginStates.ReadyForLogin;
            StateHasChanged();
        }

        if (Auth.LoginState == LoginStates.LoggedIn)
            return;

        await Task.Delay(1);
        if (LoginInput.HasValue && Email != null)
        {
            UsePasskey = false;
            Console.WriteLine("Email: " + Email);
            await LoginInput.Value.FocusAsync();
            await LoginAsync();
        }
    }

    async Task LoginAsync()
    {
        await foreach (var state in Auth.Login(User, Email))
        {
            Console.WriteLine($"Current state: {state}");
            StateHasChanged(); // Update the UI after each state change
        }
    }

    async Task LogoutAsync()
    {
        await foreach (var state in Auth.Logout(User!))
            StateHasChanged();

        Auth.LoginState = LoginStates.LoggedOut;
        StateHasChanged();
    }

    void ToggleLoginMenu()
    {
        Console.WriteLine("ToggleLoginMenu");
        ShowMenu = !ShowMenu;
        ShowOverlay = !ShowOverlay;
        if (ShowLanguageSettings)
        {
            ShowLanguageSettings = false;
        }
    }

    async void ToggleMobileMenu()
    {
        Console.WriteLine("ToggleMobileMenu");
        ShowMenu = !ShowMenu;
        if (ShowMenu == true) {
            await Js.InvokeVoidAsync("disablePageScrolling", true);
        }
        else
        {
            await Js.InvokeVoidAsync("disablePageScrolling", false);
        }
        ShowLoginTab = true;
        ShowLanguageTab = false;
    }

    void ToggleAccountSettings()
    {
        // logic to open and close account settings
    }

    void ClearInput()
    {
        // logic to clear input form for email
        Auth.LoginState = LoginStates.ReadyForLogin;
        StateHasChanged();
        LoginInput = null;
        Email = "";
    }

    void UpdateLanguage(KoriLanguage language)
    {
        Language = language;     
        StateHasChanged();
        Console.WriteLine($"Language updated to: {Language.DisplayName}");
    }

    void ShowLoginMobile() {
        Console.WriteLine("ShowLoginMobile");
        ShowLoginTab = true;
        ShowLanguageTab = false;
    }

    void ShowLanguageMobile() {
        Console.WriteLine("ShowLanguageMobile");
        ShowLanguageTab = true;
        ShowLoginTab = false;
    }
}